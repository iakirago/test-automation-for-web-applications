# Generated by Django 2.2.26 on 2022-03-18 05:13

import datetime
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Capture',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('captureid', models.CharField(default='', max_length=128, verbose_name='UUID')),
                ('content', models.TextField(blank=True, default='', verbose_name='Capture Content')),
                ('screenshot', models.CharField(default='', max_length=256, verbose_name='Screenshot Path')),
                ('consoleid', models.CharField(default='', max_length=256, verbose_name='Console ID')),
                ('capture', models.CharField(default='', max_length=256, verbose_name='Capture Path')),
                ('capturetime', models.DateTimeField(default=datetime.datetime.now, verbose_name='Capture Time')),
            ],
            options={
                'verbose_name': 'Capture',
                'verbose_name_plural': 'Captures',
                'db_table': 'parallel_capture',
            },
        ),
        migrations.CreateModel(
            name='Console',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('apptype', models.CharField(blank=True, default='', max_length=64, verbose_name='App Type')),
                ('appid', models.CharField(blank=True, default='', max_length=256, verbose_name='Test ID')),
                ('appuuid', models.CharField(default='', max_length=64, verbose_name='App UUID')),
                ('appname', models.CharField(default='', max_length=256, verbose_name='App Name')),
                ('apprunid', models.IntegerField(blank=True, default=0, verbose_name='App Run Id')),
                ('appindex', models.IntegerField(blank=True, default=0, verbose_name='App Run Index')),
                ('appserver', models.CharField(blank=True, default='', max_length=256, verbose_name='App Server')),
                ('appproduct', models.CharField(blank=True, default='', max_length=256, verbose_name='App Product')),
                ('appuser', models.CharField(default='', max_length=64, verbose_name='App User')),
                ('apppool', models.CharField(default='', max_length=256, verbose_name='App Pool')),
                ('host', models.CharField(default='', max_length=64, verbose_name='Host IP')),
                ('role', models.CharField(default='', max_length=64, verbose_name='Role')),
                ('port', models.IntegerField(blank=True, default=0, verbose_name='Host Port')),
                ('deployment', models.CharField(default='', max_length=256, verbose_name='deployment')),
                ('status', models.CharField(choices=[('init', 'init'), ('running', 'running'), ('stopped', 'stopped'), ('aborted', 'aborted')], default='init', max_length=64, verbose_name='Status')),
                ('browser', models.CharField(default='', max_length=64, verbose_name='Browser')),
                ('locale', models.CharField(default='', max_length=64, verbose_name='Locale')),
                ('resolution', models.CharField(default='', max_length=64, verbose_name='Resolution')),
                ('start_url', models.CharField(default='', max_length=256, verbose_name='Start URL')),
                ('add_host', models.CharField(blank=True, default='', max_length=255, verbose_name='Add Host')),
                ('params', models.TextField(blank=True, default='', verbose_name='Self Parameters')),
                ('build_no', models.CharField(default='', max_length=256, verbose_name='Build NO.')),
                ('createtime', models.DateTimeField(blank=True, default=datetime.datetime.now, verbose_name='Create Time')),
                ('runtime', models.DateTimeField(blank=True, default=datetime.datetime.now, verbose_name='Run Time')),
                ('starttime', models.DateTimeField(blank=True, default=datetime.datetime.now, verbose_name='Start Time')),
                ('stoptime', models.DateTimeField(blank=True, default=datetime.datetime.now, verbose_name='Stop Time')),
                ('expiretime', models.DateTimeField(blank=True, default=datetime.datetime(2022, 6, 16, 5, 13, 53, 902892), verbose_name='Expire Time')),
                ('report_status', models.CharField(blank=True, default='0', max_length=256, verbose_name='Report Status')),
            ],
            options={
                'verbose_name': 'Console',
                'verbose_name_plural': 'Consoles',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=255, unique=True, verbose_name='Name')),
                ('softdeleted', models.BooleanField(blank=True, default=False, verbose_name='Soft Deleted')),
                ('bu_name', models.CharField(default='', max_length=255, verbose_name='BU name')),
                ('reported_issue_target', models.CharField(default='bugzilla', max_length=255, verbose_name='Bug System')),
                ('bug_product_name', models.CharField(default='', max_length=255, verbose_name='Bug Product Name')),
                ('supported_browsers', models.CharField(default="['Chrome']", max_length=512, verbose_name='Supported Browsers')),
                ('supported_features', models.CharField(default='[]', max_length=512, verbose_name='Supported Features')),
                ('replayconfig', models.TextField(blank=True, default='', verbose_name='Replay Config')),
                ('hpqc_domain', models.CharField(default='', max_length=255, verbose_name='HPQC Domain Name')),
                ('hpqc_project', models.CharField(default='', max_length=255, verbose_name='HPQC Project Name')),
            ],
            options={
                'verbose_name': 'Product',
                'verbose_name_plural': 'Products',
                'db_table': 'parallel_product',
            },
        ),
        migrations.CreateModel(
            name='TestCase',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=255, verbose_name='Name')),
                ('apptype', models.CharField(choices=[('automation', 'automation'), ('parallel', 'parallel'), ('accessibility', 'accessibility')], default='parallel', max_length=64, verbose_name='Application Type')),
                ('softdeleted', models.BooleanField(blank=True, default=False, verbose_name='Soft Deleted')),
                ('browser', models.CharField(choices=[('Chrome', 'Chrome'), ('Firefox', 'Firefox')], default='Chrome', max_length=64, verbose_name='Browser')),
                ('testbed', models.CharField(blank=True, default='', max_length=255, verbose_name='Testbed')),
                ('uuid', models.CharField(default=uuid.uuid4, max_length=128, verbose_name='UUID')),
                ('status', models.CharField(choices=[('running', 'running'), ('stopped', 'stopped')], default='stopped', max_length=64, verbose_name='Status')),
                ('build_no', models.CharField(default='', max_length=256, verbose_name='Build NO.')),
                ('resolution', models.CharField(default='1280x800', max_length=64, verbose_name='Resolution')),
                ('locales', models.TextField(default='', verbose_name='Locales')),
                ('add_host', models.CharField(blank=True, default='', max_length=255, verbose_name='Add Host')),
                ('leader_locale', models.CharField(default='en_US', max_length=64, verbose_name='Leader Locale')),
                ('start_url', models.CharField(default='', max_length=255, verbose_name='Start URL')),
                ('run_id', models.IntegerField(blank=True, default=0, verbose_name='Run Id')),
                ('user', models.CharField(default='', max_length=64, verbose_name='User')),
                ('replayconfig', models.TextField(blank=True, default='', verbose_name='Replay Config')),
                ('glossary', models.TextField(blank=True, default='', verbose_name='Glossary')),
                ('pool', models.CharField(blank=True, default='', max_length=255, verbose_name='Pool Name')),
                ('access_urllist', models.TextField(blank=True, default='', verbose_name='Accessibility URL List')),
                ('accessibility_data', models.TextField(blank=True, default='', verbose_name='Accessibility Data')),
                ('createtime', models.DateTimeField(blank=True, default=datetime.datetime.now, verbose_name='Create Time')),
                ('lastruntime', models.DateTimeField(blank=True, default=datetime.datetime.now, verbose_name='Last Run Time')),
                ('product', models.ForeignKey(blank=True, db_column='product', null=True, on_delete=django.db.models.deletion.SET_NULL, to='parallel.Product', verbose_name='Product')),
            ],
            options={
                'verbose_name': 'TestCase',
                'verbose_name_plural': 'TestCases',
                'db_table': 'parallel_testcase',
            },
        ),
        migrations.CreateModel(
            name='UIEvent',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='ID')),
                ('run_id', models.IntegerField(blank=True, default=0, verbose_name='Run Id')),
                ('event', models.CharField(blank=True, default='', max_length=64, verbose_name='Event Type')),
                ('action', models.CharField(blank=True, default='', max_length=64, verbose_name='User Action')),
                ('button', models.CharField(blank=True, default='', max_length=64, verbose_name='Button')),
                ('obj_id', models.CharField(blank=True, default='', max_length=255, verbose_name='Object ID')),
                ('obj_text', models.TextField(blank=True, default='', verbose_name='Object Text')),
                ('obj_class', models.TextField(blank=True, default='', verbose_name='Object Class')),
                ('obj_value', models.TextField(blank=True, default='', verbose_name='Object Value')),
                ('obj_vuid', models.CharField(blank=True, default='', max_length=32, verbose_name='Object VUID')),
                ('obj_x', models.CharField(blank=True, default='', max_length=16, verbose_name='Object X')),
                ('obj_y', models.CharField(blank=True, default='', max_length=16, verbose_name='Object Y')),
                ('obj_left', models.CharField(blank=True, default='', max_length=16, verbose_name='Object Left')),
                ('obj_top', models.CharField(blank=True, default='', max_length=16, verbose_name='Object Top')),
                ('obj_right', models.CharField(blank=True, default='', max_length=16, verbose_name='Object Right')),
                ('obj_bottom', models.CharField(blank=True, default='', max_length=16, verbose_name='Object Bottom')),
                ('obj_selector', models.CharField(blank=True, default='', max_length=255, verbose_name='Object Selector')),
                ('obj_xpath', models.CharField(blank=True, default='', max_length=1024, verbose_name='Object XPath')),
                ('obj_xpath2', models.CharField(blank=True, default='', max_length=1024, verbose_name='Object XPath2')),
                ('obj_xpath3', models.CharField(blank=True, default='', max_length=1024, verbose_name='Object XPath3')),
                ('obj_scrolltop', models.CharField(blank=True, default='', max_length=16, verbose_name='Object Scroll Top')),
                ('obj_scrollleft', models.CharField(blank=True, default='', max_length=16, verbose_name='Object Scroll Left')),
                ('obj_assert', models.TextField(blank=True, default='', verbose_name='Object Assert Value')),
                ('obj_parent', models.CharField(blank=True, default='', max_length=1024, verbose_name='Object Parent Info')),
                ('obj_brother', models.CharField(blank=True, default='', max_length=1024, verbose_name='Object Brother Info')),
                ('obj_child', models.CharField(blank=True, default='', max_length=1024, verbose_name='Object Child Info')),
                ('verify_type', models.CharField(blank=True, default='', max_length=64, verbose_name='Verify Type')),
                ('verify_value', models.TextField(blank=True, default='', verbose_name='Verify Value')),
                ('captureid', models.CharField(blank=True, default='', max_length=128, verbose_name='Capture ID')),
                ('obj_xpath4', models.TextField(blank=True, default='', verbose_name='Object XPath4')),
                ('replayconfig', models.TextField(blank=True, default='', verbose_name='Replay Config')),
                ('platform', models.CharField(blank=True, default='', max_length=64, verbose_name='Platform')),
                ('recordtime', models.DateTimeField(blank=True, default=datetime.datetime.now, verbose_name='Record Time')),
                ('testcase', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='uievents', to='parallel.TestCase')),
            ],
            options={
                'verbose_name': 'UIEvent',
                'verbose_name_plural': 'UIEvents',
                'db_table': 'parallel_uievent',
            },
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.CharField(default='', max_length=128, verbose_name='UUID')),
                ('connecttime', models.DateTimeField(default=datetime.datetime.now, verbose_name='Connect Time')),
                ('role', models.CharField(default='', max_length=64, verbose_name='Role')),
                ('locale', models.CharField(default='', max_length=64, verbose_name='Locale')),
                ('starttime', models.DateTimeField(blank=True, default=datetime.datetime.now, verbose_name='Create Time')),
                ('testcase', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='clients', to='parallel.TestCase')),
            ],
            options={
                'verbose_name': 'Client',
                'verbose_name_plural': 'Clients',
                'db_table': 'parallel_client',
            },
        ),
    ]
